Carrito = localhost:8000/cart/
{
"id_usuario":"usuario1",
"id_producto":1,
"cantidad":4
}

{
"id_usuario":"usuario1",
"id_producto":3,
"cantidad":6
}

carrito es un objeto que tiene un producto, un precio y una cantidad

carrito 

{
creo un objeto prod1 = Producto(id_producto=1)
precio = prod1.precio
cantidad = 4
}
ESTE NO

request.Productos_Usuario.keys()

JSON de productos que seleccionO el usuario

{
productos_usuario:{'1':'4','3':'6'}
id_usuario:1
}

total = 0
productos = request.productos_usuario.keys()

for i in range (len(productos)):
	costo = 0
	productoDB = request.filter(id_producto=productos[i]).first
	costo = productoDB.precio * request.Productos_Usuarios.get(productos[i])	
	Total += costo


pedidoCompleto=pedido.save(total,request.id_usuario,status)
	
pedido:
def save(total,request.id_usuario,status)
	return id_pedido

for i in range (len(productos)):
	costo = 0
	productoDB = request.filter(id_producto=productos[i]).first
	costo = productoDB.precio * request.Productos_Usuarios.get(productos[i])	
	carrito.save	(request.id_usuario,id_producto,cantidad,costo,pedidoCompleto.id)

carrito class:
def save(request.id_usuario,id_producto,cantidad,costo):
		
		


carrito
{
creo un objeto prod2 = Producto(id_producto=3)
precio = prod2.precio
cantidad = 6
}


Pagar hace la validacion del pago

select costo from carrito where id_usuario = 1 and pedido = null
suma de costos[34,67,89,34]

pedido
{
"id_usuario":"usuario1"
Total = suma de los costos de
}

update carrito where id_usuario = 1 and pedido = null  pedido = id_pedido
select costo from carrito where id_usuario = 1 and pedido = id_pedido




{
productos_usuario:{'1':'4','3':'6'}
id_usuario:1
Total
}

  



